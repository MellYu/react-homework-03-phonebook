{"version":3,"sources":["components/Section.js","components/ContactsForm.js","components/ContactListItem.js","components/ContactsList.js","components/Filter.js","components/App.js","index.js","styles/form.module.css","styles/contactListItem.module.css"],"names":["Section","title","children","ContactForm","state","name","number","changeHandler","e","target","value","setState","submitHandler","preventDefault","contact","id","uuidv4","props","addContact","reset","this","className","styles","mainForm","onSubmit","nameLabel","type","placeholder","onChange","numberLabel","disabled","length","Component","ContactListItem","onDelete","bookItem","contactName","deleteBtn","onClick","ContactList","contacts","map","key","style","display","Filter","App","filter","deleteContactbyId","updatedContacts","newName","toLowerCase","includes","alert","filterContactsByName","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a5d8d913.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from './../styles/form.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    this.props.addContact(contact);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.mainForm} onSubmit={this.submitHandler}>\r\n        <label className={styles.nameLabel}>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"enter name...\"\r\n            onChange={this.changeHandler}\r\n            id=\"nameInput\"\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.numberLabel}>\r\n          Number:\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"enter number...\"\r\n            onChange={this.changeHandler}\r\n            id=\"numberInput\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\" disabled={!name.length || !number.length}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './../styles/contactListItem.module.css';\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => {\r\n  return (\r\n    <li className={styles.bookItem}>\r\n      <p className={styles.contactName}>\r\n        {name}: {number}\r\n      </p>\r\n      <button className={styles.deleteBtn} type=\"button\" onClick={onDelete}>\r\n        delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ContactListItem from \"./ContactListItem.js\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => onDelete(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.exact({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    PropTypes.array,\r\n  ]),\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst style = {\r\n  display: \"block\",\r\n};\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        style={style}\r\n        id=\"filterInput\"\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;","import React, {Component} from 'react';\r\nimport Section from './Section.js';\r\nimport ContactForm from './ContactsForm.js';\r\nimport ContactList from './ContactsList.js';\r\nimport Filter from './Filter.js';\r\n\r\nclass App extends Component {\r\n    state = {\r\n      contacts: [],\r\n      filter: \"\",\r\n    };\r\n  \r\n    componentDidMount(){\r\n      const contacts = localStorage.getItem('contacts');\r\n\r\n      if(contacts){\r\n        this.setState({contacts: JSON.parse(contacts)})\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n      const {contacts} = this.state;\r\n      if(prevState.contacts !== contacts){\r\n        localStorage.setItem('contacts', JSON.stringify(contacts));\r\n      }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n      const { name, value } = e.target;\r\n      this.setState({\r\n        [name]: value,\r\n      });\r\n    };\r\n  \r\n    deleteContactbyId = (id) => {\r\n      const { contacts } = this.state;\r\n      const updatedContacts = contacts.filter((contact) => contact.id !== id);\r\n      this.setState({\r\n        contacts: [...updatedContacts],\r\n      });\r\n    };\r\n  \r\n    addContact = (contact) => {\r\n      const newName = contact.name;\r\n      const names = this.state.contacts.map((contact) =>\r\n        contact.name.toLowerCase()\r\n      );\r\n      if (names.includes(newName.toLowerCase())) {\r\n          alert(`${newName} is already in contact list`);\r\n      } else {\r\n        this.setState((state) => ({\r\n          contacts: [...state.contacts, contact],\r\n        }));\r\n      }\r\n    };\r\n  \r\n    filterContactsByName = () => {\r\n      const { contacts, filter } = this.state;\r\n      if (contacts.length) {\r\n        return contacts.filter((contact) =>\r\n          contact.name.toLowerCase().includes(filter.toLowerCase())\r\n        );\r\n      }\r\n    };\r\n  \r\n    render() {\r\n      const { contacts } = this.state;\r\n      return (\r\n        <>\r\n          <Section title=\"Phonebook\">\r\n            <ContactForm addContact={this.addContact} />\r\n          </Section>\r\n          <Section title=\"Contacts\">\r\n            {contacts.length > 1 && <Filter onChange={this.changeHandler} />}\r\n            {contacts.length ? \r\n            <ContactList\r\n              contacts={this.filterContactsByName()}\r\n              onDelete={this.deleteContactbyId}\r\n            /> : (<p>There is no contacts</p>)\r\n          }\r\n          </Section>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"form_mainForm__2jt_J\",\"nameLabel\":\"form_nameLabel__1MzkJ\",\"numberLabel\":\"form_numberLabel__2J82w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookItem\":\"contactListItem_bookItem__2gRIh\",\"contactName\":\"contactListItem_contactName__2MNy-\",\"deleteBtn\":\"contactListItem_deleteBtn__28ZH1\"};"],"sourceRoot":""}